#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2017, Joyent, Inc.
#

#
# Makefile.node_prebuilt.defs: Makefile for obtaining a prebuilt Node toolchain.
#
# NOTE: This makefile comes from the "eng" repo. It's designed to be dropped
# into other repos as-is without requiring any modifications. If you find
# yourself changing this file, you should instead update the original copy in
# eng.git and then update your repo to use the new version.
#

#
# This Makefile aids in the download and operation of a Node toolchain when
# building software written in the Node language.  It provides as much isolation
# from the broader build host as possible.
#
# This Makefile is intended to be used along with "Makefile.node_prebuilt.targ".
#
# When using this Makefile, you MUST define these variables before the include
# directive:
#
#	NODE_PREBUILT_VERSION	The version of the Node toolchain to download
#				and use.  For example, "v4.8.5".
#
#	NODE_PREBUILT_TAG	The type of Node toolchain build to download.
#				For example, "gz", "zone", or "zone64".
#
#	NODE_PREBUILT_IMAGE	The UUID of the image in which the Node
#				toolchain is to have been built.
#
# This Makefile provides definitions for the following variables:
#
#	NODE_INSTALL		The location of the Node toolchain, relative
#				to $(TOP).
#

ifndef TOP
$(error You must include Makefile.defs before this makefile.)
endif

ifndef CACHE_DIR
$(error You must include Makefile.defs before this makefile.)
endif

ifndef NODE_PREBUILT_VERSION
$(error NODE_PREBUILT_VERSION must be set before including this makefile.)
endif

#
# Use a trick to create a variable that contains a single space:
#
EMPTY :=
SPACE :=			$(EMPTY) $(EMPTY)

NODE_VERSION =			$(NODE_PREBUILT_VERSION)

NODE_ID =			$(subst $(SPACE),-,$(NODE_PREBUILT_VERSION) \
				$(NODE_PREBUILT_TAG) $(NODE_PREBUILT_IMAGE))

#
# The "tools/download_go" script will obtain a Node toolchain tar archive, which
# we will store in the $(CACHE_DIR).  This directory is be removed entirely by
# "make distclean".
#
NODE_TARBALL =			$(CACHE_DIR)/sdcnode-$(NODE_ID).tar.gz

#
# The downloaded Go toolchain will be extracted into a directory under
# $(CACHE_DIR) by the $(STAMP_GO_TOOLCHAIN) target.  This directory becomes
# the value of $GOROOT for toolchain invocations.
#
NODE_INSTALL =			$(CACHE_DIR)/sdcnode-$(NODE_ID)
NODE_BIN_DIR =			$(NODE_INSTALL)/node/bin

#
# If the version of Go is changed in the Makefile, or interactively, we need
# to make sure the new version is downloaded and installed.  As such, the
# stamp name needs to include the version.
#
STAMP_NODE_PREBUILT =		$(MAKE_STAMPS_DIR)/sdcnode-$(NODE_ID)

CLEAN_FILES +=			$(NODE_INSTALL)
CLEAN_FILES +=			$(NODE_DEV_SYMLINK)

NODE =				$(TOP)/$(NODE_BIN_DIR)/node
NODE_WAF =			$(TOP)/$(NODE_BIN_DIR)/node-waf
NPM =				PATH=$(TOP)/$(NODE_BIN_DIR):$(PATH) \
				    $(NODE) $(TOP)/$(NODE_BIN_DIR)/npm
